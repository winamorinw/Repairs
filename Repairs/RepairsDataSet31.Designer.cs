//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Repairs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepairsDataSet3")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepairsDataSet3 : global::System.Data.DataSet {
        
        private ProizvodTehOtchetWithNomerDataTable tableProizvodTehOtchetWithNomer;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public RepairsDataSet3() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected RepairsDataSet3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProizvodTehOtchetWithNomer"] != null)) {
                    base.Tables.Add(new ProizvodTehOtchetWithNomerDataTable(ds.Tables["ProizvodTehOtchetWithNomer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProizvodTehOtchetWithNomerDataTable ProizvodTehOtchetWithNomer {
            get {
                return this.tableProizvodTehOtchetWithNomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RepairsDataSet3 cln = ((RepairsDataSet3)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProizvodTehOtchetWithNomer"] != null)) {
                    base.Tables.Add(new ProizvodTehOtchetWithNomerDataTable(ds.Tables["ProizvodTehOtchetWithNomer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProizvodTehOtchetWithNomer = ((ProizvodTehOtchetWithNomerDataTable)(base.Tables["ProizvodTehOtchetWithNomer"]));
            if ((initTable == true)) {
                if ((this.tableProizvodTehOtchetWithNomer != null)) {
                    this.tableProizvodTehOtchetWithNomer.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RepairsDataSet3";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepairsDataSet31.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProizvodTehOtchetWithNomer = new ProizvodTehOtchetWithNomerDataTable();
            base.Tables.Add(this.tableProizvodTehOtchetWithNomer);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeProizvodTehOtchetWithNomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepairsDataSet3 ds = new RepairsDataSet3();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ProizvodTehOtchetWithNomerRowChangeEventHandler(object sender, ProizvodTehOtchetWithNomerRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProizvodTehOtchetWithNomerDataTable : global::System.Data.TypedTableBase<ProizvodTehOtchetWithNomerRow> {
            
            private global::System.Data.DataColumn columnNumberPto;
            
            private global::System.Data.DataColumn columnednome;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnmera;
            
            private global::System.Data.DataColumn columnprace;
            
            private global::System.Data.DataColumn columnsumma;
            
            private global::System.Data.DataColumn columntehno;
            
            private global::System.Data.DataColumn columnnorma;
            
            private global::System.Data.DataColumn columnvedomostnumber;
            
            private global::System.Data.DataColumn columnNameOs;
            
            private global::System.Data.DataColumn columnObect;
            
            private global::System.Data.DataColumn columnkol_1_1;
            
            private global::System.Data.DataColumn columnsum_1_1;
            
            private global::System.Data.DataColumn columnkol_1_2;
            
            private global::System.Data.DataColumn columnsum_1_2;
            
            private global::System.Data.DataColumn columnkol_2_1;
            
            private global::System.Data.DataColumn columnsum_2_1;
            
            private global::System.Data.DataColumn columnkol_2_2;
            
            private global::System.Data.DataColumn columnsum_2_2;
            
            private global::System.Data.DataColumn columnpriznak;
            
            private global::System.Data.DataColumn columninventoryNumber;
            
            private global::System.Data.DataColumn columnsrok_zameni;
            
            private global::System.Data.DataColumn columnnam_zameni;
            
            private global::System.Data.DataColumn columnnamdoc;
            
            private global::System.Data.DataColumn columnb_bal_cena;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProizvodTehOtchetWithNomerDataTable() {
                this.TableName = "ProizvodTehOtchetWithNomer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ProizvodTehOtchetWithNomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ProizvodTehOtchetWithNomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberPtoColumn {
                get {
                    return this.columnNumberPto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ednomeColumn {
                get {
                    return this.columnednome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn meraColumn {
                get {
                    return this.columnmera;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn praceColumn {
                get {
                    return this.columnprace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn summaColumn {
                get {
                    return this.columnsumma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tehnoColumn {
                get {
                    return this.columntehno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn normaColumn {
                get {
                    return this.columnnorma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn vedomostnumberColumn {
                get {
                    return this.columnvedomostnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameOsColumn {
                get {
                    return this.columnNameOs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ObectColumn {
                get {
                    return this.columnObect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kol_1_1Column {
                get {
                    return this.columnkol_1_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sum_1_1Column {
                get {
                    return this.columnsum_1_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kol_1_2Column {
                get {
                    return this.columnkol_1_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sum_1_2Column {
                get {
                    return this.columnsum_1_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kol_2_1Column {
                get {
                    return this.columnkol_2_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sum_2_1Column {
                get {
                    return this.columnsum_2_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kol_2_2Column {
                get {
                    return this.columnkol_2_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sum_2_2Column {
                get {
                    return this.columnsum_2_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn priznakColumn {
                get {
                    return this.columnpriznak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn inventoryNumberColumn {
                get {
                    return this.columninventoryNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn srok_zameniColumn {
                get {
                    return this.columnsrok_zameni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nam_zameniColumn {
                get {
                    return this.columnnam_zameni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn namdocColumn {
                get {
                    return this.columnnamdoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn b_bal_cenaColumn {
                get {
                    return this.columnb_bal_cena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProizvodTehOtchetWithNomerRow this[int index] {
                get {
                    return ((ProizvodTehOtchetWithNomerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProizvodTehOtchetWithNomerRowChangeEventHandler ProizvodTehOtchetWithNomerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProizvodTehOtchetWithNomerRowChangeEventHandler ProizvodTehOtchetWithNomerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProizvodTehOtchetWithNomerRowChangeEventHandler ProizvodTehOtchetWithNomerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProizvodTehOtchetWithNomerRowChangeEventHandler ProizvodTehOtchetWithNomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddProizvodTehOtchetWithNomerRow(ProizvodTehOtchetWithNomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProizvodTehOtchetWithNomerRow AddProizvodTehOtchetWithNomerRow(
                        int NumberPto, 
                        string ednome, 
                        string name, 
                        decimal quantity, 
                        string mera, 
                        decimal prace, 
                        decimal summa, 
                        int tehno, 
                        int norma, 
                        int vedomostnumber, 
                        string NameOs, 
                        int Obect, 
                        decimal kol_1_1, 
                        decimal sum_1_1, 
                        decimal kol_1_2, 
                        decimal sum_1_2, 
                        decimal kol_2_1, 
                        decimal sum_2_1, 
                        decimal kol_2_2, 
                        decimal sum_2_2, 
                        int priznak, 
                        string inventoryNumber, 
                        int srok_zameni, 
                        string nam_zameni, 
                        string namdoc, 
                        string b_bal_cena) {
                ProizvodTehOtchetWithNomerRow rowProizvodTehOtchetWithNomerRow = ((ProizvodTehOtchetWithNomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumberPto,
                        ednome,
                        name,
                        quantity,
                        mera,
                        prace,
                        summa,
                        tehno,
                        norma,
                        vedomostnumber,
                        NameOs,
                        Obect,
                        kol_1_1,
                        sum_1_1,
                        kol_1_2,
                        sum_1_2,
                        kol_2_1,
                        sum_2_1,
                        kol_2_2,
                        sum_2_2,
                        priznak,
                        inventoryNumber,
                        srok_zameni,
                        nam_zameni,
                        namdoc,
                        b_bal_cena};
                rowProizvodTehOtchetWithNomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProizvodTehOtchetWithNomerRow);
                return rowProizvodTehOtchetWithNomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProizvodTehOtchetWithNomerDataTable cln = ((ProizvodTehOtchetWithNomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProizvodTehOtchetWithNomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNumberPto = base.Columns["NumberPto"];
                this.columnednome = base.Columns["ednome"];
                this.columnname = base.Columns["name"];
                this.columnquantity = base.Columns["quantity"];
                this.columnmera = base.Columns["mera"];
                this.columnprace = base.Columns["prace"];
                this.columnsumma = base.Columns["summa"];
                this.columntehno = base.Columns["tehno"];
                this.columnnorma = base.Columns["norma"];
                this.columnvedomostnumber = base.Columns["vedomostnumber"];
                this.columnNameOs = base.Columns["NameOs"];
                this.columnObect = base.Columns["Obect"];
                this.columnkol_1_1 = base.Columns["kol_1_1"];
                this.columnsum_1_1 = base.Columns["sum_1_1"];
                this.columnkol_1_2 = base.Columns["kol_1_2"];
                this.columnsum_1_2 = base.Columns["sum_1_2"];
                this.columnkol_2_1 = base.Columns["kol_2_1"];
                this.columnsum_2_1 = base.Columns["sum_2_1"];
                this.columnkol_2_2 = base.Columns["kol_2_2"];
                this.columnsum_2_2 = base.Columns["sum_2_2"];
                this.columnpriznak = base.Columns["priznak"];
                this.columninventoryNumber = base.Columns["inventoryNumber"];
                this.columnsrok_zameni = base.Columns["srok_zameni"];
                this.columnnam_zameni = base.Columns["nam_zameni"];
                this.columnnamdoc = base.Columns["namdoc"];
                this.columnb_bal_cena = base.Columns["b_bal_cena"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNumberPto = new global::System.Data.DataColumn("NumberPto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberPto);
                this.columnednome = new global::System.Data.DataColumn("ednome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnednome);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnmera = new global::System.Data.DataColumn("mera", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmera);
                this.columnprace = new global::System.Data.DataColumn("prace", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprace);
                this.columnsumma = new global::System.Data.DataColumn("summa", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsumma);
                this.columntehno = new global::System.Data.DataColumn("tehno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntehno);
                this.columnnorma = new global::System.Data.DataColumn("norma", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnorma);
                this.columnvedomostnumber = new global::System.Data.DataColumn("vedomostnumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvedomostnumber);
                this.columnNameOs = new global::System.Data.DataColumn("NameOs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOs);
                this.columnObect = new global::System.Data.DataColumn("Obect", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObect);
                this.columnkol_1_1 = new global::System.Data.DataColumn("kol_1_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol_1_1);
                this.columnsum_1_1 = new global::System.Data.DataColumn("sum_1_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_1_1);
                this.columnkol_1_2 = new global::System.Data.DataColumn("kol_1_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol_1_2);
                this.columnsum_1_2 = new global::System.Data.DataColumn("sum_1_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_1_2);
                this.columnkol_2_1 = new global::System.Data.DataColumn("kol_2_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol_2_1);
                this.columnsum_2_1 = new global::System.Data.DataColumn("sum_2_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_2_1);
                this.columnkol_2_2 = new global::System.Data.DataColumn("kol_2_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol_2_2);
                this.columnsum_2_2 = new global::System.Data.DataColumn("sum_2_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_2_2);
                this.columnpriznak = new global::System.Data.DataColumn("priznak", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriznak);
                this.columninventoryNumber = new global::System.Data.DataColumn("inventoryNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninventoryNumber);
                this.columnsrok_zameni = new global::System.Data.DataColumn("srok_zameni", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsrok_zameni);
                this.columnnam_zameni = new global::System.Data.DataColumn("nam_zameni", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnam_zameni);
                this.columnnamdoc = new global::System.Data.DataColumn("namdoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamdoc);
                this.columnb_bal_cena = new global::System.Data.DataColumn("b_bal_cena", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnb_bal_cena);
                this.columnednome.MaxLength = 50;
                this.columnname.MaxLength = 50;
                this.columnmera.MaxLength = 10;
                this.columnNameOs.MaxLength = 2147483647;
                this.columnnam_zameni.MaxLength = 60;
                this.columnnamdoc.ReadOnly = true;
                this.columnnamdoc.MaxLength = 4;
                this.columnb_bal_cena.ReadOnly = true;
                this.columnb_bal_cena.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProizvodTehOtchetWithNomerRow NewProizvodTehOtchetWithNomerRow() {
                return ((ProizvodTehOtchetWithNomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProizvodTehOtchetWithNomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProizvodTehOtchetWithNomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProizvodTehOtchetWithNomerRowChanged != null)) {
                    this.ProizvodTehOtchetWithNomerRowChanged(this, new ProizvodTehOtchetWithNomerRowChangeEvent(((ProizvodTehOtchetWithNomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProizvodTehOtchetWithNomerRowChanging != null)) {
                    this.ProizvodTehOtchetWithNomerRowChanging(this, new ProizvodTehOtchetWithNomerRowChangeEvent(((ProizvodTehOtchetWithNomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProizvodTehOtchetWithNomerRowDeleted != null)) {
                    this.ProizvodTehOtchetWithNomerRowDeleted(this, new ProizvodTehOtchetWithNomerRowChangeEvent(((ProizvodTehOtchetWithNomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProizvodTehOtchetWithNomerRowDeleting != null)) {
                    this.ProizvodTehOtchetWithNomerRowDeleting(this, new ProizvodTehOtchetWithNomerRowChangeEvent(((ProizvodTehOtchetWithNomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveProizvodTehOtchetWithNomerRow(ProizvodTehOtchetWithNomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepairsDataSet3 ds = new RepairsDataSet3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProizvodTehOtchetWithNomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProizvodTehOtchetWithNomerRow : global::System.Data.DataRow {
            
            private ProizvodTehOtchetWithNomerDataTable tableProizvodTehOtchetWithNomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ProizvodTehOtchetWithNomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProizvodTehOtchetWithNomer = ((ProizvodTehOtchetWithNomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NumberPto {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.NumberPtoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NumberPto\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.NumberPtoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ednome {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.ednomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ednome\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.ednomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'name\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'quantity\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string mera {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.meraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'mera\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.meraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal prace {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.praceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'prace\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.praceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal summa {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.summaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'summa\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.summaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int tehno {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.tehnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'tehno\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.tehnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int norma {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.normaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'norma\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.normaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int vedomostnumber {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.vedomostnumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'vedomostnumber\' в таблице \'ProizvodTehOtchetWithNomer\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.vedomostnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NameOs {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.NameOsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NameOs\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.NameOsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Obect {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.ObectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Obect\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.ObectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal kol_1_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.kol_1_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kol_1_1\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.kol_1_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal sum_1_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.sum_1_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sum_1_1\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.sum_1_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal kol_1_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.kol_1_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kol_1_2\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.kol_1_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal sum_1_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.sum_1_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sum_1_2\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.sum_1_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal kol_2_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.kol_2_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kol_2_1\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.kol_2_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal sum_2_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.sum_2_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sum_2_1\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.sum_2_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal kol_2_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.kol_2_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kol_2_2\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.kol_2_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal sum_2_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableProizvodTehOtchetWithNomer.sum_2_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sum_2_2\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.sum_2_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int priznak {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.priznakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'priznak\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.priznakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string inventoryNumber {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.inventoryNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'inventoryNumber\' в таблице \'ProizvodTehOtchetWithNomer\' рав" +
                                "но DBNull.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.inventoryNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int srok_zameni {
                get {
                    try {
                        return ((int)(this[this.tableProizvodTehOtchetWithNomer.srok_zameniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'srok_zameni\' в таблице \'ProizvodTehOtchetWithNomer\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.srok_zameniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string nam_zameni {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.nam_zameniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'nam_zameni\' в таблице \'ProizvodTehOtchetWithNomer\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.nam_zameniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string namdoc {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.namdocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'namdoc\' в таблице \'ProizvodTehOtchetWithNomer\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.namdocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string b_bal_cena {
                get {
                    try {
                        return ((string)(this[this.tableProizvodTehOtchetWithNomer.b_bal_cenaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'b_bal_cena\' в таблице \'ProizvodTehOtchetWithNomer\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProizvodTehOtchetWithNomer.b_bal_cenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumberPtoNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.NumberPtoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumberPtoNull() {
                this[this.tableProizvodTehOtchetWithNomer.NumberPtoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsednomeNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.ednomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetednomeNull() {
                this[this.tableProizvodTehOtchetWithNomer.ednomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetnameNull() {
                this[this.tableProizvodTehOtchetWithNomer.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsquantityNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetquantityNull() {
                this[this.tableProizvodTehOtchetWithNomer.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmeraNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.meraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmeraNull() {
                this[this.tableProizvodTehOtchetWithNomer.meraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspraceNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.praceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpraceNull() {
                this[this.tableProizvodTehOtchetWithNomer.praceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IssummaNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.summaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetsummaNull() {
                this[this.tableProizvodTehOtchetWithNomer.summaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstehnoNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.tehnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettehnoNull() {
                this[this.tableProizvodTehOtchetWithNomer.tehnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsnormaNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.normaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetnormaNull() {
                this[this.tableProizvodTehOtchetWithNomer.normaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsvedomostnumberNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.vedomostnumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetvedomostnumberNull() {
                this[this.tableProizvodTehOtchetWithNomer.vedomostnumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameOsNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.NameOsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameOsNull() {
                this[this.tableProizvodTehOtchetWithNomer.NameOsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsObectNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.ObectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetObectNull() {
                this[this.tableProizvodTehOtchetWithNomer.ObectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iskol_1_1Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.kol_1_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setkol_1_1Null() {
                this[this.tableProizvodTehOtchetWithNomer.kol_1_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issum_1_1Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.sum_1_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsum_1_1Null() {
                this[this.tableProizvodTehOtchetWithNomer.sum_1_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iskol_1_2Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.kol_1_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setkol_1_2Null() {
                this[this.tableProizvodTehOtchetWithNomer.kol_1_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issum_1_2Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.sum_1_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsum_1_2Null() {
                this[this.tableProizvodTehOtchetWithNomer.sum_1_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iskol_2_1Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.kol_2_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setkol_2_1Null() {
                this[this.tableProizvodTehOtchetWithNomer.kol_2_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issum_2_1Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.sum_2_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsum_2_1Null() {
                this[this.tableProizvodTehOtchetWithNomer.sum_2_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iskol_2_2Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.kol_2_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setkol_2_2Null() {
                this[this.tableProizvodTehOtchetWithNomer.kol_2_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issum_2_2Null() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.sum_2_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsum_2_2Null() {
                this[this.tableProizvodTehOtchetWithNomer.sum_2_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspriznakNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.priznakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpriznakNull() {
                this[this.tableProizvodTehOtchetWithNomer.priznakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsinventoryNumberNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.inventoryNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetinventoryNumberNull() {
                this[this.tableProizvodTehOtchetWithNomer.inventoryNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Issrok_zameniNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.srok_zameniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setsrok_zameniNull() {
                this[this.tableProizvodTehOtchetWithNomer.srok_zameniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isnam_zameniNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.nam_zameniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setnam_zameniNull() {
                this[this.tableProizvodTehOtchetWithNomer.nam_zameniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsnamdocNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.namdocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetnamdocNull() {
                this[this.tableProizvodTehOtchetWithNomer.namdocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isb_bal_cenaNull() {
                return this.IsNull(this.tableProizvodTehOtchetWithNomer.b_bal_cenaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setb_bal_cenaNull() {
                this[this.tableProizvodTehOtchetWithNomer.b_bal_cenaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ProizvodTehOtchetWithNomerRowChangeEvent : global::System.EventArgs {
            
            private ProizvodTehOtchetWithNomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProizvodTehOtchetWithNomerRowChangeEvent(ProizvodTehOtchetWithNomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProizvodTehOtchetWithNomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Repairs.RepairsDataSet3TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProizvodTehOtchetWithNomerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ProizvodTehOtchetWithNomerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProizvodTehOtchetWithNomer";
            tableMapping.ColumnMappings.Add("NumberPto", "NumberPto");
            tableMapping.ColumnMappings.Add("ednome", "ednome");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("mera", "mera");
            tableMapping.ColumnMappings.Add("prace", "prace");
            tableMapping.ColumnMappings.Add("summa", "summa");
            tableMapping.ColumnMappings.Add("tehno", "tehno");
            tableMapping.ColumnMappings.Add("norma", "norma");
            tableMapping.ColumnMappings.Add("vedomostnumber", "vedomostnumber");
            tableMapping.ColumnMappings.Add("NameOs", "NameOs");
            tableMapping.ColumnMappings.Add("Obect", "Obect");
            tableMapping.ColumnMappings.Add("kol_1_1", "kol_1_1");
            tableMapping.ColumnMappings.Add("sum_1_1", "sum_1_1");
            tableMapping.ColumnMappings.Add("kol_1_2", "kol_1_2");
            tableMapping.ColumnMappings.Add("sum_1_2", "sum_1_2");
            tableMapping.ColumnMappings.Add("kol_2_1", "kol_2_1");
            tableMapping.ColumnMappings.Add("sum_2_1", "sum_2_1");
            tableMapping.ColumnMappings.Add("kol_2_2", "kol_2_2");
            tableMapping.ColumnMappings.Add("sum_2_2", "sum_2_2");
            tableMapping.ColumnMappings.Add("priznak", "priznak");
            tableMapping.ColumnMappings.Add("inventoryNumber", "inventoryNumber");
            tableMapping.ColumnMappings.Add("srok_zameni", "srok_zameni");
            tableMapping.ColumnMappings.Add("nam_zameni", "nam_zameni");
            tableMapping.ColumnMappings.Add("namdoc", "namdoc");
            tableMapping.ColumnMappings.Add("b_bal_cena", "b_bal_cena");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Repairs.Properties.Settings.Default.RepairOSConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "--SELECT os.b_bal_cena, NumberPto, ednome, pto.name as name, quantity, mera, prac" +
                "e, summa, tehno, norma, --vedomostnumber, pto.inventoryNumber as inventoryNumber" +
                " , NameOs, Obect, kol_1_1, sum_1_1, kol_1_2, --sum_1_2, kol_2_1, sum_2_1, kol_2_" +
                "2, sum_2_2, priznak ,srok_zameni,sz.nam_zameni\r\n--FROM dbo.ProizvodTehOtchetWith" +
                "Nomer(@idpto) pto\r\n--left join SprOS os on pto.inventoryNumber=os.InventoryNumbe" +
                "r  and  pto.Obect=os.Obekt left join\r\n --Srok_zameni sz on pto.srok_zameni=sz.id" +
                "_zameni\r\nSELECT os.b_bal_cena , NumberPto, ednome, pto.name as name, quantity, m" +
                "era, prace, summa, tehno, norma, vedomostnumber, pto.inventoryNumber as inventor" +
                "yNumber , \r\nNameOs, Obect, kol_1_1, sum_1_1, kol_1_2, sum_1_2, kol_2_1, sum_2_1," +
                " kol_2_2, sum_2_2, priznak ,srok_zameni,sz.nam_zameni,\'1pto\' as namdoc\r\nFROM dbo" +
                ".ProizvodTehOtchetWithNomer(@idpto) pto\r\nleft join SprOS os on pto.inventoryNumb" +
                "er=os.InventoryNumber  and  pto.Obect=os.Obekt left join Srok_zameni sz on pto.s" +
                "rok_zameni=sz.id_zameni\r\n--union\r\n--SELECT  \'\' as   b_bal_cena,  cast(PTO.NomPTO" +
                " as int) as numberpto, VozvrDet.EdNumber as --ednome,VozvrDet.Name\r\n--\t,  VozvrD" +
                "et.Quantity , \'\' as mera , 0 as prace , 0 as summa, 0 as tehno , 0 as norma\r\n--\t" +
                ", Vedomost_Resursov.Id as VedomostNumber, Vedomost_Resursov.InventoryNamber as -" +
                "-InventoryNamber, \r\n--\t--\'\' as NameOs\r\n--\tNameOs = \'Інв. №\' + CAST(Vedomost_Resu" +
                "rsov.InventoryNamber as nvarchar(15)) + \'  \'+ CAST--(Vedomost_Resursov.Obekt as " +
                "nvarchar(15)) + \'  \' + Vedomost_Resursov.NameOs\r\n--\t, \'\' as Obect\r\n--\t, null as " +
                "kol_1_1,null as sum_1_1, null as kol_1_2,null as sum_1_2,null as kol_2_1,null as" +
                " sum_2_1\r\n--\t, null as kol_2_2,null as sum_2_2, \'\' as priznak\t, \'\' as srok_zamen" +
                "i\t, \'\' as nam_zameni\r\n--\t ,\'2det\' as namdoc\r\n--FROM            PTO \r\n--INNER JOI" +
                "N Vedomost_Resursov ON PTO.IdPTO = Vedomost_Resursov.IdPTO \r\n--INNER JOIN VozvrD" +
                "et ON Vedomost_Resursov.RepairID = VozvrDet.RepairID\r\n--WHERE        (PTO.IdPTO " +
                "=@idpto)\r\nunion all\r\nSELECT    \'\' as   b_bal_cena, cast( PTO.NomPTO as int)as nu" +
                "mberpto , VozvrMet.EdNumber as ednome, VozvrMet.Name\r\n\t , VozvrMet.Quantity, \'\' " +
                "as mera, VozvrMet.Price as prace , VozvrMet.Sum as summa,\r\n    0 as tehno , 0 as" +
                " norma \r\n\t, Vedomost_Resursov.Id as VedomostNumber, Vedomost_Resursov.InventoryN" +
                "amber as InventoryNamber, \r\n\t\r\n\t--\'\' as NameOs, \r\n\t  NameOs = \'Інв. №\' + CAST(Ve" +
                "domost_Resursov.InventoryNamber as nvarchar(15)) + \'  \'+ CAST(Vedomost_Resursov." +
                "Obekt as nvarchar(15)) + \'  \' + Vedomost_Resursov.NameOs,\r\n\t\'\' as Obect\r\n\t, null" +
                " as kol_1_1, null as sum_1_1, null as kol_1_2, null as sum_1_2, null as kol_2_1," +
                " null as sum_2_1\r\n\t, null as kol_2_2, 0 as sum_2_2, null as priznak, \'\' as srok_" +
                "zameni, \'\' as nam_zameni\r\n\t\t ,\'3met\' as namdoc\r\nFROM            PTO \r\nINNER JOIN" +
                " Vedomost_Resursov ON PTO.IdPTO = Vedomost_Resursov.IdPTO \r\nINNER JOIN VozvrMet " +
                "ON Vedomost_Resursov.RepairID = VozvrMet.RepairID and Vedomost_Resursov.ID  = Vo" +
                "zvrMet.VedomostNumber\r\nWHERE        (PTO.IdPTO = @idpto) \r\norder by inventoryNum" +
                "ber,namdoc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idpto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RepairsDataSet3.ProizvodTehOtchetWithNomerDataTable dataTable, int idpto) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(idpto));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RepairsDataSet3.ProizvodTehOtchetWithNomerDataTable GetData(int idpto) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(idpto));
            RepairsDataSet3.ProizvodTehOtchetWithNomerDataTable dataTable = new RepairsDataSet3.ProizvodTehOtchetWithNomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(RepairsDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(RepairsDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(RepairsDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(RepairsDataSet3 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591