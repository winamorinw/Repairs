//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Repairs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepairsDataSet12")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepairsDataSet12 : global::System.Data.DataSet {
        
        private Jobs_FromAktF2DataTable tableJobs_FromAktF2;
        
        private Vedomost_ResursovDataTable tableVedomost_Resursov;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RepairsDataSet12() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RepairsDataSet12(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Jobs_FromAktF2"] != null)) {
                    base.Tables.Add(new Jobs_FromAktF2DataTable(ds.Tables["Jobs_FromAktF2"]));
                }
                if ((ds.Tables["Vedomost_Resursov"] != null)) {
                    base.Tables.Add(new Vedomost_ResursovDataTable(ds.Tables["Vedomost_Resursov"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Jobs_FromAktF2DataTable Jobs_FromAktF2 {
            get {
                return this.tableJobs_FromAktF2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Vedomost_ResursovDataTable Vedomost_Resursov {
            get {
                return this.tableVedomost_Resursov;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RepairsDataSet12 cln = ((RepairsDataSet12)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Jobs_FromAktF2"] != null)) {
                    base.Tables.Add(new Jobs_FromAktF2DataTable(ds.Tables["Jobs_FromAktF2"]));
                }
                if ((ds.Tables["Vedomost_Resursov"] != null)) {
                    base.Tables.Add(new Vedomost_ResursovDataTable(ds.Tables["Vedomost_Resursov"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableJobs_FromAktF2 = ((Jobs_FromAktF2DataTable)(base.Tables["Jobs_FromAktF2"]));
            if ((initTable == true)) {
                if ((this.tableJobs_FromAktF2 != null)) {
                    this.tableJobs_FromAktF2.InitVars();
                }
            }
            this.tableVedomost_Resursov = ((Vedomost_ResursovDataTable)(base.Tables["Vedomost_Resursov"]));
            if ((initTable == true)) {
                if ((this.tableVedomost_Resursov != null)) {
                    this.tableVedomost_Resursov.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RepairsDataSet12";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RepairsDataSet12.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableJobs_FromAktF2 = new Jobs_FromAktF2DataTable();
            base.Tables.Add(this.tableJobs_FromAktF2);
            this.tableVedomost_Resursov = new Vedomost_ResursovDataTable();
            base.Tables.Add(this.tableVedomost_Resursov);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJobs_FromAktF2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVedomost_Resursov() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepairsDataSet12 ds = new RepairsDataSet12();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Jobs_FromAktF2RowChangeEventHandler(object sender, Jobs_FromAktF2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Vedomost_ResursovRowChangeEventHandler(object sender, Vedomost_ResursovRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Jobs_FromAktF2DataTable : global::System.Data.TypedTableBase<Jobs_FromAktF2Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnID_VedR;
            
            private global::System.Data.DataColumn columnNam_job;
            
            private global::System.Data.DataColumn columnch_chas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Jobs_FromAktF2DataTable() {
                this.TableName = "Jobs_FromAktF2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Jobs_FromAktF2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Jobs_FromAktF2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_VedRColumn {
                get {
                    return this.columnID_VedR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nam_jobColumn {
                get {
                    return this.columnNam_job;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ch_chasColumn {
                get {
                    return this.columnch_chas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Jobs_FromAktF2Row this[int index] {
                get {
                    return ((Jobs_FromAktF2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Jobs_FromAktF2RowChangeEventHandler Jobs_FromAktF2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Jobs_FromAktF2RowChangeEventHandler Jobs_FromAktF2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Jobs_FromAktF2RowChangeEventHandler Jobs_FromAktF2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Jobs_FromAktF2RowChangeEventHandler Jobs_FromAktF2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJobs_FromAktF2Row(Jobs_FromAktF2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Jobs_FromAktF2Row AddJobs_FromAktF2Row(int ID_VedR, string Nam_job, double ch_chas) {
                Jobs_FromAktF2Row rowJobs_FromAktF2Row = ((Jobs_FromAktF2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ID_VedR,
                        Nam_job,
                        ch_chas};
                rowJobs_FromAktF2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowJobs_FromAktF2Row);
                return rowJobs_FromAktF2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Jobs_FromAktF2DataTable cln = ((Jobs_FromAktF2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Jobs_FromAktF2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnID_VedR = base.Columns["ID_VedR"];
                this.columnNam_job = base.Columns["Nam_job"];
                this.columnch_chas = base.Columns["ch_chas"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnID_VedR = new global::System.Data.DataColumn("ID_VedR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_VedR);
                this.columnNam_job = new global::System.Data.DataColumn("Nam_job", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNam_job);
                this.columnch_chas = new global::System.Data.DataColumn("ch_chas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnch_chas);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID_VedR.AllowDBNull = false;
                this.columnNam_job.AllowDBNull = false;
                this.columnNam_job.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Jobs_FromAktF2Row NewJobs_FromAktF2Row() {
                return ((Jobs_FromAktF2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Jobs_FromAktF2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Jobs_FromAktF2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Jobs_FromAktF2RowChanged != null)) {
                    this.Jobs_FromAktF2RowChanged(this, new Jobs_FromAktF2RowChangeEvent(((Jobs_FromAktF2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Jobs_FromAktF2RowChanging != null)) {
                    this.Jobs_FromAktF2RowChanging(this, new Jobs_FromAktF2RowChangeEvent(((Jobs_FromAktF2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Jobs_FromAktF2RowDeleted != null)) {
                    this.Jobs_FromAktF2RowDeleted(this, new Jobs_FromAktF2RowChangeEvent(((Jobs_FromAktF2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Jobs_FromAktF2RowDeleting != null)) {
                    this.Jobs_FromAktF2RowDeleting(this, new Jobs_FromAktF2RowChangeEvent(((Jobs_FromAktF2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJobs_FromAktF2Row(Jobs_FromAktF2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepairsDataSet12 ds = new RepairsDataSet12();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Jobs_FromAktF2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Vedomost_ResursovDataTable : global::System.Data.TypedTableBase<Vedomost_ResursovRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRepairID;
            
            private global::System.Data.DataColumn columnInventoryNamber;
            
            private global::System.Data.DataColumn columnNameOS;
            
            private global::System.Data.DataColumn columnPeriodData1;
            
            private global::System.Data.DataColumn columnPeriodData2;
            
            private global::System.Data.DataColumn columnZakazchik_codcx;
            
            private global::System.Data.DataColumn columnZakazchik_coduth;
            
            private global::System.Data.DataColumn columnIspolnitel_codcx;
            
            private global::System.Data.DataColumn columnIspolnitel_coduth;
            
            private global::System.Data.DataColumn columnIspolnitel_codbrig;
            
            private global::System.Data.DataColumn columnIspolnitel_coddet;
            
            private global::System.Data.DataColumn columnIspolnitel_Name;
            
            private global::System.Data.DataColumn columnZakazchik_codbrig;
            
            private global::System.Data.DataColumn columnZakazchik_coddet;
            
            private global::System.Data.DataColumn columnkod_rem;
            
            private global::System.Data.DataColumn columnkol;
            
            private global::System.Data.DataColumn columnkol1;
            
            private global::System.Data.DataColumn columnobekt;
            
            private global::System.Data.DataColumn columnshpz_vr;
            
            private global::System.Data.DataColumn columnID_VedR;
            
            private global::System.Data.DataColumn columnNam_job;
            
            private global::System.Data.DataColumn columnch_chas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovDataTable() {
                this.TableName = "Vedomost_Resursov";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Vedomost_ResursovDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Vedomost_ResursovDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepairIDColumn {
                get {
                    return this.columnRepairID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InventoryNamberColumn {
                get {
                    return this.columnInventoryNamber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameOSColumn {
                get {
                    return this.columnNameOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PeriodData1Column {
                get {
                    return this.columnPeriodData1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PeriodData2Column {
                get {
                    return this.columnPeriodData2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Zakazchik_codcxColumn {
                get {
                    return this.columnZakazchik_codcx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Zakazchik_coduthColumn {
                get {
                    return this.columnZakazchik_coduth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ispolnitel_codcxColumn {
                get {
                    return this.columnIspolnitel_codcx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ispolnitel_coduthColumn {
                get {
                    return this.columnIspolnitel_coduth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ispolnitel_codbrigColumn {
                get {
                    return this.columnIspolnitel_codbrig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ispolnitel_coddetColumn {
                get {
                    return this.columnIspolnitel_coddet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ispolnitel_NameColumn {
                get {
                    return this.columnIspolnitel_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Zakazchik_codbrigColumn {
                get {
                    return this.columnZakazchik_codbrig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Zakazchik_coddetColumn {
                get {
                    return this.columnZakazchik_coddet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kod_remColumn {
                get {
                    return this.columnkod_rem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kolColumn {
                get {
                    return this.columnkol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kol1Column {
                get {
                    return this.columnkol1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn obektColumn {
                get {
                    return this.columnobekt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shpz_vrColumn {
                get {
                    return this.columnshpz_vr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_VedRColumn {
                get {
                    return this.columnID_VedR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nam_jobColumn {
                get {
                    return this.columnNam_job;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ch_chasColumn {
                get {
                    return this.columnch_chas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovRow this[int index] {
                get {
                    return ((Vedomost_ResursovRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Vedomost_ResursovRowChangeEventHandler Vedomost_ResursovRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Vedomost_ResursovRowChangeEventHandler Vedomost_ResursovRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Vedomost_ResursovRowChangeEventHandler Vedomost_ResursovRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Vedomost_ResursovRowChangeEventHandler Vedomost_ResursovRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVedomost_ResursovRow(Vedomost_ResursovRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovRow AddVedomost_ResursovRow(
                        int RepairID, 
                        int InventoryNamber, 
                        string NameOS, 
                        System.DateTime PeriodData1, 
                        System.DateTime PeriodData2, 
                        string Zakazchik_codcx, 
                        string Zakazchik_coduth, 
                        string Ispolnitel_codcx, 
                        string Ispolnitel_coduth, 
                        string Ispolnitel_codbrig, 
                        string Ispolnitel_coddet, 
                        string Ispolnitel_Name, 
                        string Zakazchik_codbrig, 
                        string Zakazchik_coddet, 
                        int kod_rem, 
                        int kol, 
                        int kol1, 
                        short obekt, 
                        string shpz_vr, 
                        int ID_VedR, 
                        string Nam_job, 
                        double ch_chas) {
                Vedomost_ResursovRow rowVedomost_ResursovRow = ((Vedomost_ResursovRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RepairID,
                        InventoryNamber,
                        NameOS,
                        PeriodData1,
                        PeriodData2,
                        Zakazchik_codcx,
                        Zakazchik_coduth,
                        Ispolnitel_codcx,
                        Ispolnitel_coduth,
                        Ispolnitel_codbrig,
                        Ispolnitel_coddet,
                        Ispolnitel_Name,
                        Zakazchik_codbrig,
                        Zakazchik_coddet,
                        kod_rem,
                        kol,
                        kol1,
                        obekt,
                        shpz_vr,
                        ID_VedR,
                        Nam_job,
                        ch_chas};
                rowVedomost_ResursovRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVedomost_ResursovRow);
                return rowVedomost_ResursovRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovRow FindByID(int ID) {
                return ((Vedomost_ResursovRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Vedomost_ResursovDataTable cln = ((Vedomost_ResursovDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Vedomost_ResursovDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRepairID = base.Columns["RepairID"];
                this.columnInventoryNamber = base.Columns["InventoryNamber"];
                this.columnNameOS = base.Columns["NameOS"];
                this.columnPeriodData1 = base.Columns["PeriodData1"];
                this.columnPeriodData2 = base.Columns["PeriodData2"];
                this.columnZakazchik_codcx = base.Columns["Zakazchik_codcx"];
                this.columnZakazchik_coduth = base.Columns["Zakazchik_coduth"];
                this.columnIspolnitel_codcx = base.Columns["Ispolnitel_codcx"];
                this.columnIspolnitel_coduth = base.Columns["Ispolnitel_coduth"];
                this.columnIspolnitel_codbrig = base.Columns["Ispolnitel_codbrig"];
                this.columnIspolnitel_coddet = base.Columns["Ispolnitel_coddet"];
                this.columnIspolnitel_Name = base.Columns["Ispolnitel_Name"];
                this.columnZakazchik_codbrig = base.Columns["Zakazchik_codbrig"];
                this.columnZakazchik_coddet = base.Columns["Zakazchik_coddet"];
                this.columnkod_rem = base.Columns["kod_rem"];
                this.columnkol = base.Columns["kol"];
                this.columnkol1 = base.Columns["kol1"];
                this.columnobekt = base.Columns["obekt"];
                this.columnshpz_vr = base.Columns["shpz_vr"];
                this.columnID_VedR = base.Columns["ID_VedR"];
                this.columnNam_job = base.Columns["Nam_job"];
                this.columnch_chas = base.Columns["ch_chas"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRepairID = new global::System.Data.DataColumn("RepairID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairID);
                this.columnInventoryNamber = new global::System.Data.DataColumn("InventoryNamber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInventoryNamber);
                this.columnNameOS = new global::System.Data.DataColumn("NameOS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOS);
                this.columnPeriodData1 = new global::System.Data.DataColumn("PeriodData1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodData1);
                this.columnPeriodData2 = new global::System.Data.DataColumn("PeriodData2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodData2);
                this.columnZakazchik_codcx = new global::System.Data.DataColumn("Zakazchik_codcx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakazchik_codcx);
                this.columnZakazchik_coduth = new global::System.Data.DataColumn("Zakazchik_coduth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakazchik_coduth);
                this.columnIspolnitel_codcx = new global::System.Data.DataColumn("Ispolnitel_codcx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIspolnitel_codcx);
                this.columnIspolnitel_coduth = new global::System.Data.DataColumn("Ispolnitel_coduth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIspolnitel_coduth);
                this.columnIspolnitel_codbrig = new global::System.Data.DataColumn("Ispolnitel_codbrig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIspolnitel_codbrig);
                this.columnIspolnitel_coddet = new global::System.Data.DataColumn("Ispolnitel_coddet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIspolnitel_coddet);
                this.columnIspolnitel_Name = new global::System.Data.DataColumn("Ispolnitel_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIspolnitel_Name);
                this.columnZakazchik_codbrig = new global::System.Data.DataColumn("Zakazchik_codbrig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakazchik_codbrig);
                this.columnZakazchik_coddet = new global::System.Data.DataColumn("Zakazchik_coddet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakazchik_coddet);
                this.columnkod_rem = new global::System.Data.DataColumn("kod_rem", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_rem);
                this.columnkol = new global::System.Data.DataColumn("kol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol);
                this.columnkol1 = new global::System.Data.DataColumn("kol1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol1);
                this.columnobekt = new global::System.Data.DataColumn("obekt", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobekt);
                this.columnshpz_vr = new global::System.Data.DataColumn("shpz_vr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshpz_vr);
                this.columnID_VedR = new global::System.Data.DataColumn("ID_VedR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_VedR);
                this.columnNam_job = new global::System.Data.DataColumn("Nam_job", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNam_job);
                this.columnch_chas = new global::System.Data.DataColumn("ch_chas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnch_chas);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnRepairID.AllowDBNull = false;
                this.columnInventoryNamber.AllowDBNull = false;
                this.columnNameOS.AllowDBNull = false;
                this.columnNameOS.MaxLength = 2147483647;
                this.columnPeriodData1.AllowDBNull = false;
                this.columnPeriodData2.AllowDBNull = false;
                this.columnZakazchik_codcx.AllowDBNull = false;
                this.columnZakazchik_codcx.MaxLength = 5;
                this.columnZakazchik_coduth.MaxLength = 5;
                this.columnIspolnitel_codcx.AllowDBNull = false;
                this.columnIspolnitel_codcx.MaxLength = 5;
                this.columnIspolnitel_coduth.MaxLength = 5;
                this.columnIspolnitel_codbrig.MaxLength = 5;
                this.columnIspolnitel_coddet.MaxLength = 5;
                this.columnIspolnitel_Name.MaxLength = 2147483647;
                this.columnZakazchik_codbrig.MaxLength = 5;
                this.columnZakazchik_coddet.MaxLength = 5;
                this.columnkol.ReadOnly = true;
                this.columnkol1.ReadOnly = true;
                this.columnshpz_vr.MaxLength = 10;
                this.columnNam_job.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovRow NewVedomost_ResursovRow() {
                return ((Vedomost_ResursovRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Vedomost_ResursovRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Vedomost_ResursovRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Vedomost_ResursovRowChanged != null)) {
                    this.Vedomost_ResursovRowChanged(this, new Vedomost_ResursovRowChangeEvent(((Vedomost_ResursovRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Vedomost_ResursovRowChanging != null)) {
                    this.Vedomost_ResursovRowChanging(this, new Vedomost_ResursovRowChangeEvent(((Vedomost_ResursovRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Vedomost_ResursovRowDeleted != null)) {
                    this.Vedomost_ResursovRowDeleted(this, new Vedomost_ResursovRowChangeEvent(((Vedomost_ResursovRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Vedomost_ResursovRowDeleting != null)) {
                    this.Vedomost_ResursovRowDeleting(this, new Vedomost_ResursovRowChangeEvent(((Vedomost_ResursovRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVedomost_ResursovRow(Vedomost_ResursovRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepairsDataSet12 ds = new RepairsDataSet12();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Vedomost_ResursovDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Jobs_FromAktF2Row : global::System.Data.DataRow {
            
            private Jobs_FromAktF2DataTable tableJobs_FromAktF2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Jobs_FromAktF2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJobs_FromAktF2 = ((Jobs_FromAktF2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableJobs_FromAktF2.IDColumn]));
                }
                set {
                    this[this.tableJobs_FromAktF2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_VedR {
                get {
                    return ((int)(this[this.tableJobs_FromAktF2.ID_VedRColumn]));
                }
                set {
                    this[this.tableJobs_FromAktF2.ID_VedRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nam_job {
                get {
                    return ((string)(this[this.tableJobs_FromAktF2.Nam_jobColumn]));
                }
                set {
                    this[this.tableJobs_FromAktF2.Nam_jobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ch_chas {
                get {
                    try {
                        return ((double)(this[this.tableJobs_FromAktF2.ch_chasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ch_chas\' в таблице \'Jobs_FromAktF2\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobs_FromAktF2.ch_chasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isch_chasNull() {
                return this.IsNull(this.tableJobs_FromAktF2.ch_chasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setch_chasNull() {
                this[this.tableJobs_FromAktF2.ch_chasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Vedomost_ResursovRow : global::System.Data.DataRow {
            
            private Vedomost_ResursovDataTable tableVedomost_Resursov;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Vedomost_ResursovRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVedomost_Resursov = ((Vedomost_ResursovDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableVedomost_Resursov.IDColumn]));
                }
                set {
                    this[this.tableVedomost_Resursov.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RepairID {
                get {
                    return ((int)(this[this.tableVedomost_Resursov.RepairIDColumn]));
                }
                set {
                    this[this.tableVedomost_Resursov.RepairIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InventoryNamber {
                get {
                    return ((int)(this[this.tableVedomost_Resursov.InventoryNamberColumn]));
                }
                set {
                    this[this.tableVedomost_Resursov.InventoryNamberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameOS {
                get {
                    return ((string)(this[this.tableVedomost_Resursov.NameOSColumn]));
                }
                set {
                    this[this.tableVedomost_Resursov.NameOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PeriodData1 {
                get {
                    return ((global::System.DateTime)(this[this.tableVedomost_Resursov.PeriodData1Column]));
                }
                set {
                    this[this.tableVedomost_Resursov.PeriodData1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PeriodData2 {
                get {
                    return ((global::System.DateTime)(this[this.tableVedomost_Resursov.PeriodData2Column]));
                }
                set {
                    this[this.tableVedomost_Resursov.PeriodData2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Zakazchik_codcx {
                get {
                    return ((string)(this[this.tableVedomost_Resursov.Zakazchik_codcxColumn]));
                }
                set {
                    this[this.tableVedomost_Resursov.Zakazchik_codcxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Zakazchik_coduth {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Zakazchik_coduthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Zakazchik_coduth\' в таблице \'Vedomost_Resursov\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Zakazchik_coduthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ispolnitel_codcx {
                get {
                    return ((string)(this[this.tableVedomost_Resursov.Ispolnitel_codcxColumn]));
                }
                set {
                    this[this.tableVedomost_Resursov.Ispolnitel_codcxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ispolnitel_coduth {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Ispolnitel_coduthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ispolnitel_coduth\' в таблице \'Vedomost_Resursov\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Ispolnitel_coduthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ispolnitel_codbrig {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Ispolnitel_codbrigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ispolnitel_codbrig\' в таблице \'Vedomost_Resursov\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Ispolnitel_codbrigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ispolnitel_coddet {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Ispolnitel_coddetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ispolnitel_coddet\' в таблице \'Vedomost_Resursov\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Ispolnitel_coddetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ispolnitel_Name {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Ispolnitel_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ispolnitel_Name\' в таблице \'Vedomost_Resursov\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Ispolnitel_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Zakazchik_codbrig {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Zakazchik_codbrigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Zakazchik_codbrig\' в таблице \'Vedomost_Resursov\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Zakazchik_codbrigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Zakazchik_coddet {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Zakazchik_coddetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Zakazchik_coddet\' в таблице \'Vedomost_Resursov\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Zakazchik_coddetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kod_rem {
                get {
                    try {
                        return ((int)(this[this.tableVedomost_Resursov.kod_remColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kod_rem\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.kod_remColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kol {
                get {
                    try {
                        return ((int)(this[this.tableVedomost_Resursov.kolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kol\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.kolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kol1 {
                get {
                    try {
                        return ((int)(this[this.tableVedomost_Resursov.kol1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'kol1\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.kol1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short obekt {
                get {
                    try {
                        return ((short)(this[this.tableVedomost_Resursov.obektColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'obekt\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.obektColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string shpz_vr {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.shpz_vrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'shpz_vr\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.shpz_vrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_VedR {
                get {
                    try {
                        return ((int)(this[this.tableVedomost_Resursov.ID_VedRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_VedR\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.ID_VedRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nam_job {
                get {
                    try {
                        return ((string)(this[this.tableVedomost_Resursov.Nam_jobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Nam_job\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.Nam_jobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ch_chas {
                get {
                    try {
                        return ((double)(this[this.tableVedomost_Resursov.ch_chasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ch_chas\' в таблице \'Vedomost_Resursov\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableVedomost_Resursov.ch_chasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZakazchik_coduthNull() {
                return this.IsNull(this.tableVedomost_Resursov.Zakazchik_coduthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZakazchik_coduthNull() {
                this[this.tableVedomost_Resursov.Zakazchik_coduthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIspolnitel_coduthNull() {
                return this.IsNull(this.tableVedomost_Resursov.Ispolnitel_coduthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIspolnitel_coduthNull() {
                this[this.tableVedomost_Resursov.Ispolnitel_coduthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIspolnitel_codbrigNull() {
                return this.IsNull(this.tableVedomost_Resursov.Ispolnitel_codbrigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIspolnitel_codbrigNull() {
                this[this.tableVedomost_Resursov.Ispolnitel_codbrigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIspolnitel_coddetNull() {
                return this.IsNull(this.tableVedomost_Resursov.Ispolnitel_coddetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIspolnitel_coddetNull() {
                this[this.tableVedomost_Resursov.Ispolnitel_coddetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIspolnitel_NameNull() {
                return this.IsNull(this.tableVedomost_Resursov.Ispolnitel_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIspolnitel_NameNull() {
                this[this.tableVedomost_Resursov.Ispolnitel_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZakazchik_codbrigNull() {
                return this.IsNull(this.tableVedomost_Resursov.Zakazchik_codbrigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZakazchik_codbrigNull() {
                this[this.tableVedomost_Resursov.Zakazchik_codbrigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZakazchik_coddetNull() {
                return this.IsNull(this.tableVedomost_Resursov.Zakazchik_coddetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZakazchik_coddetNull() {
                this[this.tableVedomost_Resursov.Zakazchik_coddetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iskod_remNull() {
                return this.IsNull(this.tableVedomost_Resursov.kod_remColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setkod_remNull() {
                this[this.tableVedomost_Resursov.kod_remColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskolNull() {
                return this.IsNull(this.tableVedomost_Resursov.kolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkolNull() {
                this[this.tableVedomost_Resursov.kolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iskol1Null() {
                return this.IsNull(this.tableVedomost_Resursov.kol1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setkol1Null() {
                this[this.tableVedomost_Resursov.kol1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsobektNull() {
                return this.IsNull(this.tableVedomost_Resursov.obektColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetobektNull() {
                this[this.tableVedomost_Resursov.obektColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isshpz_vrNull() {
                return this.IsNull(this.tableVedomost_Resursov.shpz_vrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setshpz_vrNull() {
                this[this.tableVedomost_Resursov.shpz_vrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_VedRNull() {
                return this.IsNull(this.tableVedomost_Resursov.ID_VedRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_VedRNull() {
                this[this.tableVedomost_Resursov.ID_VedRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNam_jobNull() {
                return this.IsNull(this.tableVedomost_Resursov.Nam_jobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNam_jobNull() {
                this[this.tableVedomost_Resursov.Nam_jobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isch_chasNull() {
                return this.IsNull(this.tableVedomost_Resursov.ch_chasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setch_chasNull() {
                this[this.tableVedomost_Resursov.ch_chasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Jobs_FromAktF2RowChangeEvent : global::System.EventArgs {
            
            private Jobs_FromAktF2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Jobs_FromAktF2RowChangeEvent(Jobs_FromAktF2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Jobs_FromAktF2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Vedomost_ResursovRowChangeEvent : global::System.EventArgs {
            
            private Vedomost_ResursovRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovRowChangeEvent(Vedomost_ResursovRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Vedomost_ResursovRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Repairs.RepairsDataSet12TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Jobs_FromAktF2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Jobs_FromAktF2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Jobs_FromAktF2";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ID_VedR", "ID_VedR");
            tableMapping.ColumnMappings.Add("Nam_job", "Nam_job");
            tableMapping.ColumnMappings.Add("ch_chas", "ch_chas");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Jobs_FromAktF2] ([ID_VedR], [Nam_job], [ch_chas]) VALUES (@ID_" +
                "VedR, @Nam_job, @ch_chas)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_VedR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_VedR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nam_job", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nam_job", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ch_chas", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ch_chas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Repairs.Properties.Settings.Default.RepairOSConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ID_VedR, Nam_job, ch_chas FROM dbo.Jobs_FromAktF2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RepairsDataSet12.Jobs_FromAktF2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RepairsDataSet12.Jobs_FromAktF2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RepairsDataSet12.Jobs_FromAktF2DataTable dataTable = new RepairsDataSet12.Jobs_FromAktF2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RepairsDataSet12.Jobs_FromAktF2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RepairsDataSet12 dataSet) {
            return this.Adapter.Update(dataSet, "Jobs_FromAktF2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_VedR, string Nam_job, global::System.Nullable<double> ch_chas) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_VedR));
            if ((Nam_job == null)) {
                throw new global::System.ArgumentNullException("Nam_job");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nam_job));
            }
            if ((ch_chas.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(ch_chas.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Vedomost_ResursovTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Vedomost_ResursovTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Vedomost_Resursov";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("RepairID", "RepairID");
            tableMapping.ColumnMappings.Add("InventoryNamber", "InventoryNamber");
            tableMapping.ColumnMappings.Add("NameOS", "NameOS");
            tableMapping.ColumnMappings.Add("PeriodData1", "PeriodData1");
            tableMapping.ColumnMappings.Add("PeriodData2", "PeriodData2");
            tableMapping.ColumnMappings.Add("Zakazchik_codcx", "Zakazchik_codcx");
            tableMapping.ColumnMappings.Add("Zakazchik_coduth", "Zakazchik_coduth");
            tableMapping.ColumnMappings.Add("Ispolnitel_codcx", "Ispolnitel_codcx");
            tableMapping.ColumnMappings.Add("Ispolnitel_coduth", "Ispolnitel_coduth");
            tableMapping.ColumnMappings.Add("Ispolnitel_codbrig", "Ispolnitel_codbrig");
            tableMapping.ColumnMappings.Add("Ispolnitel_coddet", "Ispolnitel_coddet");
            tableMapping.ColumnMappings.Add("Ispolnitel_Name", "Ispolnitel_Name");
            tableMapping.ColumnMappings.Add("Zakazchik_codbrig", "Zakazchik_codbrig");
            tableMapping.ColumnMappings.Add("Zakazchik_coddet", "Zakazchik_coddet");
            tableMapping.ColumnMappings.Add("kod_rem", "kod_rem");
            tableMapping.ColumnMappings.Add("kol", "kol");
            tableMapping.ColumnMappings.Add("kol1", "kol1");
            tableMapping.ColumnMappings.Add("obekt", "obekt");
            tableMapping.ColumnMappings.Add("shpz_vr", "shpz_vr");
            tableMapping.ColumnMappings.Add("ID_VedR", "ID_VedR");
            tableMapping.ColumnMappings.Add("Nam_job", "Nam_job");
            tableMapping.ColumnMappings.Add("ch_chas", "ch_chas");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Repairs.Properties.Settings.Default.RepairOSConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\r\n sELECT x.kol, y.kol1, vr.[ID] ,vr.[RepairID]  ,vr.[InventoryNamber]  ,[NameOS]" +
                " ,vr.obekt,[PeriodData1],[PeriodData2],vr.[Shpz] as shpz_vr,[Zakazchik_codcx]\r\n " +
                "     ,[Zakazchik_coduth]  ,[Zakazchik_codbrig],[Zakazchik_coddet],[Ispolnitel_co" +
                "dcx],[Ispolnitel_coduth] ,[Ispolnitel_codbrig] ,[Ispolnitel_coddet]\r\n      ,[Isp" +
                "olnitel_Name],isnull(kod_rem,1) as kod_rem \r\n\t  ,jfa.[ID_VedR]\r\n      ,jfa.[Nam_" +
                "job]\r\n      ,jfa.[ch_chas]\r\n  FROM Vedomost_Resursov vr\r\n  inner join (SELECT In" +
                "ventoryNamber, obekt, count(*) as kol,\r\n\t\t\t\tYEAR(PeriodData1) as god, MONTH(Peri" +
                "odData1) as nonth,\r\n\t\t\t\tIspolnitel_codcx as isp \r\n\t\t\t\tFROM Vedomost_Resursov\r\n\t\t" +
                "\t\twhere id is not null\r\n\t\t\t\tgroup by [InventoryNamber], obekt,\r\n\t\t\t\tYEAR(PeriodD" +
                "ata1), MONTH(PeriodData1),Ispolnitel_codcx\r\n\t) x on vr.InventoryNamber = x.Inven" +
                "toryNamber and  isnull(vr.obekt,0) = isnull(x.obekt,0) and   YEAR(vr.PeriodData1" +
                ") = god and MONTH(vr.PeriodData1) = nonth and vr.Ispolnitel_codcx = isp \r\n   inn" +
                "er join (SELECT InventoryNamber, obekt, count(*) as kol1,\r\n\t\t\t\tYEAR(PeriodData1)" +
                " as god1, MONTH(PeriodData1) as nonth1\r\n\t\t\t\tFROM Vedomost_Resursov\r\n\t\t\t\twhere id" +
                " is not null\r\n\t\t\t\tgroup by [InventoryNamber], obekt,\r\n\t\t\t\tYEAR(PeriodData1), MON" +
                "TH(PeriodData1)\r\n\t) y on vr.InventoryNamber = y.InventoryNamber and  isnull(vr.o" +
                "bekt,0) = isnull(y.obekt,0) and   YEAR(vr.PeriodData1) = god1 and MONTH(vr.Perio" +
                "dData1) = nonth1\r\n  left join Jobs_FromAktF2 jfa on  jfa.ID_VedR=vr.ID\r\n  where " +
                "vr.ID is not null and (( ( (convert(datetime,convert(varchar,vr.PeriodData1,1),1" +
                ")) >= (convert(datetime,convert(varchar,@datBeg,1),1)))\r\n     and ((convert(date" +
                "time,convert(varchar,vr.PeriodData1,1),1))<= (convert(datetime,convert(varchar,@" +
                "datEnd,1),1)) ) ) )  and \r\n(( ( (convert(datetime,convert(varchar,vr.PeriodData2" +
                ",1),1)) >= (convert(datetime,convert(varchar,@datBeg,1),1)))\r\n     and ((convert" +
                "(datetime,convert(varchar,vr.PeriodData2,1),1))<= (convert(datetime,convert(varc" +
                "har,@datEnd,1),1)) ) ) ) \r\n\t  order by \r\n\t  vr.Ispolnitel_codcx,vr.Ispolnitel_co" +
                "duth, vr.Ispolnitel_codbrig,vr.InventoryNamber,vr.ID\r\n\t  ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datBeg", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datEnd", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "\r\n sELECT x.kol, y.kol1, vr.[ID] ,vr.[RepairID]  ,vr.[InventoryNamber]  ,[NameOS]" +
                " ,vr.obekt,[PeriodData1],[PeriodData2],vr.[Shpz] as shpz_vr,[Zakazchik_codcx]\r\n " +
                "     ,[Zakazchik_coduth]  ,[Zakazchik_codbrig],[Zakazchik_coddet],[Ispolnitel_co" +
                "dcx],[Ispolnitel_coduth] ,[Ispolnitel_codbrig] ,[Ispolnitel_coddet]\r\n      ,[Isp" +
                "olnitel_Name],isnull(kod_rem,1) as kod_rem \r\n\t  ,jfa.[ID_VedR]\r\n      ,jfa.[Nam_" +
                "job]\r\n      ,jfa.[ch_chas]\r\n  FROM Vedomost_Resursov vr\r\n  inner join (SELECT In" +
                "ventoryNamber, obekt, count(*) as kol,\r\n\t\t\t\tYEAR(PeriodData1) as god, MONTH(Peri" +
                "odData1) as nonth,\r\n\t\t\t\tIspolnitel_codcx as isp \r\n\t\t\t\tFROM Vedomost_Resursov\r\n\t\t" +
                "\t\twhere id is not null\r\n\t\t\t\tgroup by [InventoryNamber], obekt,\r\n\t\t\t\tYEAR(PeriodD" +
                "ata1), MONTH(PeriodData1),Ispolnitel_codcx\r\n\t) x on vr.InventoryNamber = x.Inven" +
                "toryNamber and  isnull(vr.obekt,0) = isnull(x.obekt,0) and   YEAR(vr.PeriodData1" +
                ") = god and MONTH(vr.PeriodData1) = nonth and vr.Ispolnitel_codcx = isp \r\n   inn" +
                "er join (SELECT InventoryNamber, obekt, count(*) as kol1,\r\n\t\t\t\tYEAR(PeriodData1)" +
                " as god1, MONTH(PeriodData1) as nonth1\r\n\t\t\t\tFROM Vedomost_Resursov\r\n\t\t\t\twhere id" +
                " is not null\r\n\t\t\t\tgroup by [InventoryNamber], obekt,\r\n\t\t\t\tYEAR(PeriodData1), MON" +
                "TH(PeriodData1)\r\n\t) y on vr.InventoryNamber = y.InventoryNamber and  isnull(vr.o" +
                "bekt,0) = isnull(y.obekt,0) and   YEAR(vr.PeriodData1) = god1 and MONTH(vr.Perio" +
                "dData1) = nonth1\r\n  left join Jobs_FromAktF2 jfa on  jfa.ID_VedR=vr.ID\r\n  where " +
                "vr.ID is not null and \r\n(( ( (convert(datetime,convert(varchar,vr.PeriodData1,1)" +
                ",1)) >= (convert(datetime,convert(varchar,@datBeg,1),1)))\r\n     and ((convert(da" +
                "tetime,convert(varchar,vr.PeriodData1,1),1))<= (convert(datetime,convert(varchar" +
                ",@datEnd,1),1)) ) ) ) \r\n\r\n and ( ( ( (convert(datetime,convert(varchar,vr.Period" +
                "Data2,1),1)) >= (convert(datetime,convert(varchar,@datBeg,1),1)))\r\n     and ((co" +
                "nvert(datetime,convert(varchar,vr.PeriodData2,1),1))<= (convert(datetime,convert" +
                "(varchar,@datEnd,1),1)) ) ) ) and vr.Ispolnitel_codcx=@codcx\r\n\t  order by \r\n\t  v" +
                "r.Ispolnitel_codcx,vr.Ispolnitel_coduth, vr.Ispolnitel_codbrig,vr.InventoryNambe" +
                "r,vr.ID\r\n\t  ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datBeg", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datEnd", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codcx", global::System.Data.SqlDbType.NVarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "Ispolnitel_codcx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "\r\n sELECT x.kol, y.kol1, vr.[ID] ,vr.[RepairID]  ,vr.[InventoryNamber]  ,[NameOS]" +
                " ,vr.obekt,[PeriodData1],[PeriodData2],vr.[Shpz] as shpz_vr,[Zakazchik_codcx]\r\n " +
                "     ,[Zakazchik_coduth]  ,[Zakazchik_codbrig],[Zakazchik_coddet],[Ispolnitel_co" +
                "dcx],[Ispolnitel_coduth] ,[Ispolnitel_codbrig] ,[Ispolnitel_coddet]\r\n      ,[Isp" +
                "olnitel_Name],isnull(kod_rem,1) as kod_rem \r\n\t  ,jfa.[ID_VedR]\r\n      ,jfa.[Nam_" +
                "job]\r\n      ,jfa.[ch_chas]\r\n  FROM Vedomost_Resursov vr\r\n  inner join (SELECT In" +
                "ventoryNamber, obekt, count(*) as kol,\r\n\t\t\t\tYEAR(PeriodData1) as god, MONTH(Peri" +
                "odData1) as nonth,\r\n\t\t\t\tIspolnitel_codcx as isp \r\n\t\t\t\tFROM Vedomost_Resursov\r\n\t\t" +
                "\t\twhere id is not null\r\n\t\t\t\tgroup by [InventoryNamber], obekt,\r\n\t\t\t\tYEAR(PeriodD" +
                "ata1), MONTH(PeriodData1),Ispolnitel_codcx\r\n\t) x on vr.InventoryNamber = x.Inven" +
                "toryNamber and  isnull(vr.obekt,0) = isnull(x.obekt,0) and   YEAR(vr.PeriodData1" +
                ") = god and MONTH(vr.PeriodData1) = nonth and vr.Ispolnitel_codcx = isp \r\n   inn" +
                "er join (SELECT InventoryNamber, obekt, count(*) as kol1,\r\n\t\t\t\tYEAR(PeriodData1)" +
                " as god1, MONTH(PeriodData1) as nonth1\r\n\t\t\t\tFROM Vedomost_Resursov\r\n\t\t\t\twhere id" +
                " is not null\r\n\t\t\t\tgroup by [InventoryNamber], obekt,\r\n\t\t\t\tYEAR(PeriodData1), MON" +
                "TH(PeriodData1)\r\n\t) y on vr.InventoryNamber = y.InventoryNamber and  isnull(vr.o" +
                "bekt,0) = isnull(y.obekt,0) and   YEAR(vr.PeriodData1) = god1 and MONTH(vr.Perio" +
                "dData1) = nonth1\r\n  left join Jobs_FromAktF2 jfa on  jfa.ID_VedR=vr.ID\r\n  where " +
                "vr.InventoryNamber=@cinvnum and vr.ID is not null and (( ( (convert(datetime,con" +
                "vert(varchar,vr.PeriodData1,1),1)) >= (convert(datetime,convert(varchar,@datBeg," +
                "1),1)))\r\n     and ((convert(datetime,convert(varchar,vr.PeriodData1,1),1))<= (co" +
                "nvert(datetime,convert(varchar,@datEnd,1),1)) ) ) )  and \r\n(( ( (convert(datetim" +
                "e,convert(varchar,vr.PeriodData2,1),1)) >= (convert(datetime,convert(varchar,@da" +
                "tBeg,1),1)))\r\n     and ((convert(datetime,convert(varchar,vr.PeriodData2,1),1))<" +
                "= (convert(datetime,convert(varchar,@datEnd,1),1)) ) ) ) \r\n\t  order by \r\n\t  vr.I" +
                "spolnitel_codcx,vr.Ispolnitel_coduth, vr.Ispolnitel_codbrig,vr.InventoryNamber,v" +
                "r.ID\r\n\t  ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cinvnum", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InventoryNamber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datBeg", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datEnd", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RepairsDataSet12.Vedomost_ResursovDataTable dataTable, System.DateTime datBeg, System.DateTime datEnd) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(datBeg));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(datEnd));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RepairsDataSet12.Vedomost_ResursovDataTable GetData(System.DateTime datBeg, System.DateTime datEnd) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(datBeg));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(datEnd));
            RepairsDataSet12.Vedomost_ResursovDataTable dataTable = new RepairsDataSet12.Vedomost_ResursovDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(RepairsDataSet12.Vedomost_ResursovDataTable dataTable, System.DateTime datBeg, System.DateTime datEnd, string codcx) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(datBeg));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(datEnd));
            if ((codcx == null)) {
                throw new global::System.ArgumentNullException("codcx");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(codcx));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual RepairsDataSet12.Vedomost_ResursovDataTable GetDataBy(System.DateTime datBeg, System.DateTime datEnd, string codcx) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(datBeg));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(datEnd));
            if ((codcx == null)) {
                throw new global::System.ArgumentNullException("codcx");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(codcx));
            }
            RepairsDataSet12.Vedomost_ResursovDataTable dataTable = new RepairsDataSet12.Vedomost_ResursovDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(RepairsDataSet12.Vedomost_ResursovDataTable dataTable, int cinvnum, System.DateTime datBeg, System.DateTime datEnd) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(cinvnum));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(datBeg));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(datEnd));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual RepairsDataSet12.Vedomost_ResursovDataTable GetDataBy1(int cinvnum, System.DateTime datBeg, System.DateTime datEnd) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(cinvnum));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(datBeg));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(datEnd));
            RepairsDataSet12.Vedomost_ResursovDataTable dataTable = new RepairsDataSet12.Vedomost_ResursovDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Jobs_FromAktF2TableAdapter _jobs_FromAktF2TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Jobs_FromAktF2TableAdapter Jobs_FromAktF2TableAdapter {
            get {
                return this._jobs_FromAktF2TableAdapter;
            }
            set {
                this._jobs_FromAktF2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._jobs_FromAktF2TableAdapter != null) 
                            && (this._jobs_FromAktF2TableAdapter.Connection != null))) {
                    return this._jobs_FromAktF2TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._jobs_FromAktF2TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(RepairsDataSet12 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._jobs_FromAktF2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Jobs_FromAktF2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jobs_FromAktF2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(RepairsDataSet12 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._jobs_FromAktF2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Jobs_FromAktF2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jobs_FromAktF2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(RepairsDataSet12 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._jobs_FromAktF2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Jobs_FromAktF2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jobs_FromAktF2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(RepairsDataSet12 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._jobs_FromAktF2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jobs_FromAktF2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._jobs_FromAktF2TableAdapter != null)) {
                    revertConnections.Add(this._jobs_FromAktF2TableAdapter, this._jobs_FromAktF2TableAdapter.Connection);
                    this._jobs_FromAktF2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jobs_FromAktF2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jobs_FromAktF2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jobs_FromAktF2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jobs_FromAktF2TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._jobs_FromAktF2TableAdapter != null)) {
                    this._jobs_FromAktF2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jobs_FromAktF2TableAdapter]));
                    this._jobs_FromAktF2TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591